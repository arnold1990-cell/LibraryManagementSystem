package com.LibraryManagementSystem.LibraryManagementSystem.Model;

import com.LibraryManagementSystem.LibraryManagementSystem.ENUMS.BookStatus;
import com.LibraryManagementSystem.LibraryManagementSystem.ENUMS.Genre;
import jakarta.persistence.*;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

import java.time.LocalDate;

// This annotation marks this class as a JPA entity.
// It means this class is mapped to a table in the database.
@Entity

// Lombok annotations to reduce boilerplate code
@Data               // Generates getters, setters, toString(), equals(), and hashCode()
@Builder            // Allows building objects using the builder pattern
@AllArgsConstructor // Generates a constructor with all fields
@NoArgsConstructor  // Generates a no-argument constructor

// Specifies the database table name for this entity
@Table(name = "books")
public class Book {

    // Primary key of the table, auto-generated by the database
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    // Title column: cannot be null, max length 200
    @Column(nullable = false, length = 200)
    private String title;

    // Author column: cannot be null, max length 100
    @Column(nullable = false, length = 100)
    private String author;

    // Genre column: stored as a string in the database, cannot be null
    @Enumerated(EnumType.STRING)
    @Column(nullable = false)
    private Genre genre;

    // Book status column: stored as a string in the database, cannot be null
    // Default value is AVAILABLE
    @Enumerated(EnumType.STRING)
    @Column(nullable = false)
    private BookStatus bookStatus = BookStatus.AVAILABLE;

    // Published date column (optional)
    @Column(name = "published_date")
    private LocalDate publishedDate;
}
