package com.LibraryManagementSystem.LibraryManagementSystem.Model;

import com.LibraryManagementSystem.LibraryManagementSystem.ENUMS.MembershipType;
import com.LibraryManagementSystem.LibraryManagementSystem.ENUMS.UserRole;
import jakarta.persistence.*;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

// This class represents a "User" table in the database
@Entity

// Lombok annotations to reduce boilerplate code
@Data               // Generates getters, setters, toString(), equals(), and hashCode()
@Builder            // Allows building objects using the builder pattern
@AllArgsConstructor // Constructor with all fields
@NoArgsConstructor  // No-argument constructor

// Specifies the table name in the database
@Table(name = "users")
public class User {

    // Primary key, auto-generated by the database
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    // Name column: cannot be null, max length 100
    @Column(nullable = false, length = 100)
    private String name;

    // Email column: cannot be null, must be unique, max length 50
    @Column(nullable = false, unique = true, length = 50)
    private String email;

    // User role column: stored as a string in the database, cannot be null
    @Enumerated(EnumType.STRING)
    @Column(nullable = false)
    private UserRole userRole;

    // Membership type column: stored as a string in the database, cannot be null
    @Enumerated(EnumType.STRING)
    @Column(nullable = false)
    private MembershipType membershipType;
}
